<div class="flex items-center">
  <!-- button notifications -->
  <div class="px-4">
    <div class="relative">
      <button
        class="rounded-md rounded-red-700 text-md outline-red-700 text-red-900"
        id="logout"
        onclick="showErros()"
      >
        <span class="px-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
            ></path>
          </svg>
        </span>
      </button>
    </div>
  </div>
  <label for="toggle" class="mr-3">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="25px"
      height="25px"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M7 17L17 7L12 2V22L17 17L7 7"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
  </label>
  <div
    id="switch"
    class="relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in"
  >
    <input type="checkbox" id="toggle" class="absolute opacity-0 w-0 h-0" />
    <label
      for="toggle"
      class="block overflow-hidden h-6 rounded-full cursor-pointer transition-colors duration-300 bg-red-500"
    >
      <span
        class="toggle-dot absolute left-[3px] top-[4px] bg-white w-4 h-4 rounded-full transition-transform duration-300 transform"
      ></span>
    </label>
  </div>
</div>
<script is:inline>
  var toggle = document.getElementById("toggle");
  var switchLabel = document.querySelector("#switch label");
  var switchSpan = document.querySelector("#switch span");

  toggle.addEventListener("change", function () {
    if (toggle.checked) {
      // Cambia a estado 'true'
      if (isWebBluetoothEnabled()) {
        connectToDevice();
      }
    } else {
      // Cambia a estado 'false'
      switchLabel.classList.remove("bg-green-500");
      switchLabel.classList.add("bg-red-500");

      switchSpan.classList.remove("right-[3px]");
      switchSpan.classList.add("left-[3px]");
      disconnectDevice();
    }
  });

  function showErros() {
    const errors = getErrorsMawois();
    if (errors && errors.length > 0) {
      for (let error of errors) {
        showAlert("Error with Mawoi ID: " + error);
      }
    }
  }
</script>

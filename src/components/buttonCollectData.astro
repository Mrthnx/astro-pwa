<div>
  <button
    class="w-full rounded-full bg-green-700 hover:bg-green-800 text-white border-white border-2 px-2 py-1"
    id="collectData">Collect Data</button
  >
</div>
<script is:inline>
  let mawoisWithCollectData = [];
  let mawoiWithCollectData = {
    id: null,
    code: null,
    description: null,
    pointLength: 0,
    points: [],
  };
  let pointWithCollectData = {
    id: null,
    date: null,
    NEXT_X_W: [],
    NEXT_X_S: [],
    NEXT_Y_W: [],
    NEXT_Y_S: [],
    NEXT_Z_W: [],
    NEXT_Z_S: [],
  };
  var eventActive = "NEXT_X";
  const collectData = document.getElementById("collectData");
  collectData.addEventListener("click", () => {
    mawoisWithCollectData =
      localStorage.getItem("mawoisWithCollectData") || "[]";
    mawoisWithCollectData = JSON.parse(mawoisWithCollectData);

    if (!toggle.checked) {
      alert("Please turn on Bluetooth!");
      return;
    }
    if (MAWOI_SELECTED == null) {
      alert("Please select a mawoi!");
      return;
    }
    drawClear();
    showLoading();
    let mawoiStore = localStorage.getItem("mawoiSelected");
    mawoiStore = JSON.parse(mawoiStore);

    let idxMawoi = -1;
    if (mawoisWithCollectData && mawoisWithCollectData.length > 0) {
      idxMawoi = mawoisWithCollectData.findIndex(
        (mawoi) => mawoi.id === mawoiStore.id,
      );
    }

    if (idxMawoi >= 0) {
      mawoiWithCollectData = mawoisWithCollectData[idxMawoi];
    } else {
      mawoiWithCollectData.id = MAWOI_SELECTED.id;
      mawoiWithCollectData.code = MAWOI_SELECTED.code;
      mawoiWithCollectData.description = MAWOI_SELECTED.description;
      const pointsLength = [
        ...new Set(
          MAWOI_SELECTED.points.map((point) => point.code.substr(0, 2)),
        ),
      ].length;
      mawoiWithCollectData.pointLength = pointsLength;
      mawoiWithCollectData.points = [];
    }

    const pointSelect = document.getElementById("point-select");
    pointWithCollectData.id = pointSelect.value;
    pointWithCollectData.date = new Date().getTime();

    eventActive = "NEXT_X";
    writeOnCharacteristic("NEXT_X");
    setTimeout(() => {
      eventActive = "NEXT_Y";
      writeOnCharacteristic("NEXT_Y");
      setTimeout(() => {
        eventActive = "NEXT_Z";
        writeOnCharacteristic("NEXT_Z");
      }, 18000);
    }, 18000);
    setTimeout(() => {
      mawoiWithCollectData.points.push({ ...pointWithCollectData });
      if (idxMawoi >= 0) {
        mawoisWithCollectData[idxMawoi] = { ...mawoiWithCollectData };
      } else {
        mawoisWithCollectData.push({ ...mawoiWithCollectData });
      }
      localStorage.setItem(
        "mawoisWithCollectData",
        JSON.stringify(mawoisWithCollectData),
      );

      let plantMemory = localStorage.getItem("plants") || "[]";
      plantMemory = JSON.parse(plantMemory);
      plantMemory = plantMemory.filter(Boolean);
      if (plantMemory && plantMemory.length > 0) {
        createHierarchyList(plantMemory);
        setDateByMawoiId(mawoiWithCollectData.id, pointWithCollectData.id);
      }

      hideLoading();
    }, 54000);
  });
</script>
